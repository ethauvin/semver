/*
 * This file is automatically generated.
 * Do not modify! -- ALL CHANGES WILL BE ERASED!
 */
package {{packageName}}

import java.util.*

/**
 * Provides semantic version information.
 *
 * @author <a href="https://github.com/ethauvin/semver">Semantic Version
 *         Annotation Processor</a>
 */
object {{className}} {
    @JvmField
    val project = "{{project}}"

    @JvmField
    val buildDate = Date({{epoch}}L)

    @JvmField
    val major = {{major}}

    @JvmField
    val minor = {{minor}}

    @JvmField
    val patch = {{patch}}

    @JvmField
    val buildMeta = "{{buildMeta}}"

    @JvmField
    val preRelease = "{{preRelease}}"

    @JvmStatic
    val version: String
        get() = ("$major.$minor.$patch" + preReleaseWithPrefix() + buildMetaWithPrefix())

    @JvmStatic
    fun preReleaseWithPrefix(prefix: String = "-"): String {
        return if (preRelease.isNotEmpty() && prefix.isNotEmpty()) {
            "$prefix$preRelease"
        } else {
            preRelease
        }
    }

    @JvmStatic
    fun buildMetaWithPrefix(prefix: String = "+"): String {
        return if (buildMeta.isNotEmpty() && prefix.isNotEmpty()) {
            "$prefix$buildMeta"
        } else {
            buildMeta
        }
    }
}